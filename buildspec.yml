version: 0.2
env:
  variables:
    DEPLOY_ROLE: "arn:aws:iam::785773943475:role/codepipeline-deploy-role"
    SERVICE_NAME: "jcu-stg"
    CLUSTER_NAME: "jcu-stg-cluster"
    IMAGE_NAME: "785773943475.dkr.ecr.ap-southeast-2.amazonaws.com/jcu-stg-backend-ecr"

phases:
  pre_build:
    commands:
      - echo Installing psql, AWS CLI, and ecs-deploy...
      - apt-get update && apt-get install -y postgresql-client awscli
      - curl -Lo /usr/local/bin/ecs-deploy https://github.com/silinternational/ecs-deploy/releases/latest/download/ecs-deploy-linux-amd64 && chmod +x /usr/local/bin/ecs-deploy
      - echo Logging into Amazon ECR...
      - aws --version
      - bash ci/ecr-login.sh $DEPLOY_ROLE $AWS_PROFILE $IMAGE_PATH
      - DB_HOST=$(aws secretsmanager get-secret-value --secret-id jcu-stg-secrets | jq --raw-output '.SecretString' | jq -r .host)
      - DB_USERNAME=$(aws secretsmanager get-secret-value --secret-id jcu-stg-secrets | jq --raw-output '.SecretString' | jq -r .username)
      - DB_DATABASE=$(aws secretsmanager get-secret-value --secret-id jcu-stg-secrets | jq --raw-output '.SecretString' | jq -r .database)
      - DB_PASSWORD=$(aws secretsmanager get-secret-value --secret-id jcu-stg-secrets | jq --raw-output '.SecretString' | jq -r .password)
      - DB_PORT=$(aws secretsmanager get-secret-value --secret-id jcu-stg-secrets | jq --raw-output '.SecretString' | jq -r .port)
      - echo Building the Docker image...
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - docker build --no-cache -t jcu-backend -f Dockerfile .
      - docker tag jcu-backend:latest $IMAGE_NAME:$IMAGE_TAG
      - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
  build:
    commands:
      - echo Building the Docker image...
      - docker push $IMAGE_NAME:$IMAGE_TAG
      - docker push $IMAGE_NAME:latest
      - echo Running psql command...
      - psql -h $DB_HOST -d $DB_DATABASE -U $DB_USERNAME -p $DB_PORT -W $DB_PASSWORD
  post_build:
    commands:
      - echo deploy into ecs
      - bash ci/assume-role.sh $DEPLOY_ROLE $SERVICE_NAME $CLUSTER_NAME $IMAGE_NAME $IMAGE_TAG
      - docker rmi -f jcu-backend
